import{_ as e,c as a,o as s,ag as n}from"./chunks/framework.DPDPlp3K.js";const m=JSON.parse('{"title":"Two Sum","description":"Array two sum problem","frontmatter":{"title":"Two Sum","date":"2021-08-05T00:00:00.000Z","tags":"leetcode","description":"Array two sum problem","comment":false},"headers":[],"relativePath":"posts/2.array-two-sum.md","filePath":"posts/2.array-two-sum.md","lastUpdated":1746079307000}'),o={name:"posts/2.array-two-sum.md"};function p(l,t,r,i,u,c){return s(),a("div",null,t[0]||(t[0]=[n(`<h2 id="two-sum" tabindex="-1">Two Sum <a class="header-anchor" href="#two-sum" aria-label="Permalink to &quot;Two Sum&quot;">​</a></h2><blockquote><p><a href="https://leetcode.com/problems/two-sum" target="_blank" rel="noreferrer">https://leetcode.com/problems/two-sum</a></p></blockquote><p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code>.</em><br> You may assume that each input would have <strong>exactly one solution</strong>, and you may not use the <em>same</em> element twice.<br> You can return the answer in any order.</p><p>Example 1:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Input: nums = [2,7,11,15], target = 9</span></span>
<span class="line"><span>Output: [0,1]</span></span>
<span class="line"><span>Output: Because nums[0] + nums[1] == 9, we return [0, 1].</span></span></code></pre></div><p>Example 2:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Input: nums = [3,2,4], target = 6</span></span>
<span class="line"><span>Output: [1,2]</span></span></code></pre></div><p>Example 3:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Input: nums = [3,3], target = 6</span></span>
<span class="line"><span>Output: [0,1]</span></span></code></pre></div><p>Constraints:</p><ul><li>2 &lt;= nums.length &lt;= 10⁴</li><li>-10⁹ &lt;= nums[i] &lt;= 10⁹</li><li>-10⁹ &lt;= target &lt;= 10⁹</li><li><strong>Only one valid answer exists.</strong></li></ul><p><strong>Follow-up:</strong> Can you come up with an algorithm that is less than <code>O(n²)</code> time complexity?</p>`,12)]))}const h=e(o,[["render",p]]);export{m as __pageData,h as default};
